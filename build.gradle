import com.github.jk1.license.filter.ExcludeTransitiveDependenciesFilter
import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.render.InventoryMarkdownReportRenderer

plugins {
    id 'org.springframework.boot' version '2.3.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "io.franzbecker.gradle-lombok" version "3.3.0"
    id "com.github.jk1.dependency-license-report" version "1.13"
    id 'java'
    id 'jacoco'
}

group = 'com.virnect'
version = '1.4.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR10")
    jacocoExcludes = [
        
    ]
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    implementation 'org.springframework.cloud:spring-cloud-config-client'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    //Swagger Libraries
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    // JSON WEB TOKEN for jdk 8
    implementation 'io.jsonwebtoken:jjwt:0.9.0'
    // JSON WEB TOKEN for jdk 11
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
//    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
//    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
    systemProperty("spring.active.profiles", "test")
    systemProperty("VIRNECT_ENV", "test")
    finalizedBy jacocoTestReport
}

//License Reporting Configuration
licenseReport {
    renderers = [new InventoryMarkdownReportRenderer()]
    filters = [new LicenseBundleNormalizer(), new ExcludeTransitiveDependenciesFilter()]
}

/**
 * Jacoco Configuration
 */

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test

    reports {
        csv.enabled true
        xml.enabled true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        }))
    }

    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        }))
    }
}

bootJar {
    layered()
}

