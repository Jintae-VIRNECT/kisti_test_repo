plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "com.moowork.node" version "1.3.1"
    id 'java'
}

group = 'com.virnect.login'
version = '1.0.0'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'develop' : profile


node {
    version = '12.13.1'
    npmVersion = '6.12.1'
}

task setUp(type: YarnTask) {
    description = "Install NodeJS Packages"
    args = ['install']
    inputs.files file('./package.json')
}

task buildFrontend(type: YarnTask, dependsOn: setUp) {
    println("Front Project Build Env : ${profile}")
    def env = "${profile}"
    description = "Build Vue JS"
    if (project.hasProperty('profile') && env != "production") {
        args = ['workspace', 'frontend', "build:${profile}"]
    } else {
        args = ['workspace', 'frontend', "build"]
    }
}

processResources.dependsOn 'buildFrontend'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
