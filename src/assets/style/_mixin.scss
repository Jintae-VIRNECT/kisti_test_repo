@import "_vars";

/*
 * 테마 적용
 */
@mixin theme-dark() {
  @at-root [theme="dark"] & {
    @content;
  }
}
@mixin theme-bright() {
  @at-root [theme="bright"] & {
    @content;
  }
}

/*
 * 구간 분기를 위한 보더
 * @param {String} $direction : "right", "left", "top", "bottom"
 */
@mixin background-border($direction) {
  &::after {
    position: absolute;
    background-color: rgba($color_text, 0.04);
    @include theme-bright() {
      background-color: $color_text;
    }
    content: "";
    @if $direction == "right" {
      // border-right: $color_bg_shadow_border;
      right: 0;
      bottom: 0;
      width: 1px;
      height: 100%;
    } @else if $direction == "left" {
      // border-left: $color_bg_shadow_border;
      bottom: 0;
      left: 0;
      width: 1px;
      height: 100%;
    } @else if $direction == "top" {
      // border-top: $color_bg_shadow_border;
      top: 0;
      left: 0;
      width: 100%;
      height: 1px;
    } @else if $direction == "bottom" {
      // border-bottom: $color_bg_shadow_border;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 1px;
    }
  }
}

// 연결 상태값 색상 설정
@mixin status-color($dot: false) {
  &.good {
    color: $color_state_good;
    background-color: $color_state_good_bg;
    border-color: $color_state_good;
    @if $dot {
      &::after {
        position: absolute;
        top: 50%;
        left: 8px;
        width: 5px;
        height: 5px;
        background-color: $color_state_good;
        border-radius: 50%;
        transform: translateY(-50%);
        content: "";
      }
    }
  }
  &.normal {
    color: $color_state_normal;
    background-color: $color_state_normal_bg;
    border-color: $color_state_normal;
    @if $dot {
      &::after {
        position: absolute;
        top: 50%;
        left: 8px;
        width: 5px;
        height: 5px;
        background-color: $color_state_normal;
        border-radius: 50%;
        transform: translateY(-50%);
        content: "";
      }
    }
  }
  &.bad {
    color: $color_state_bad;
    background-color: $color_state_bad_bg;
    border-color: $color_state_bad;
    @if $dot {
      &::after {
        position: absolute;
        top: 50%;
        left: 8px;
        width: 5px;
        height: 5px;
        background-color: $color_state_bad;
        border-radius: 50%;
        transform: translateY(-50%);
        content: "";
      }
    }
  }
}

@mixin border-gradient($start_color, $end_color) {
  border-image: gradient($start_color, $end_color);
}

@mixin ir {
  overflow: hidden;
  text-indent: -999px;
}

@mixin image {
  overflow: hidden;
  line-height: 0;
  background: url("~assets/image/icon_bg.svg") no-repeat;
  background-size: 100%;
  &:before {
    position: absolute;
    top: 0;
    left: 0;
    width: 80%;
    height: 80%;
    margin: 10%;
    background: url("~assets/image/icon_user_profile.svg") no-repeat;
    background-size: 100%;
    content: "";
  }
  &.group {
    &:before {
      background-image: url("~assets/image/icon_user_remote.svg");
    }
  }
  > img {
    overflow: hidden;
    background-color: #fff;
    background-position: center;
    background-size: cover;
    mask: url("~assets/image/icon_bg.svg") no-repeat;
    mask-size: 100%;
    // border-radius: 50%;
  }
}
@mixin profileMask($innerColor, $borderWidth, $borderColor) {
  position: relative;
  mask: url("~assets/image/icon_bg.svg") no-repeat;
  mask-size: 100%;
  overflow: hidden;
  background-color: $borderColor;
  &:before {
    position: absolute;
    top: 50%;
    left: 50%;
    z-index: -1;
    width: calc(100% - #{$borderWidth + $borderWidth});
    height: calc(100% - #{$borderWidth + $borderWidth});
    background-color: $innerColor;
    transform: translate(-50%, -50%);
    content: "";
    mask: url("~assets/image/icon_bg.svg") no-repeat;
    mask-size: 100%;
  }
}

@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

.ir {
  @include ir;
}
.clearfix {
  @include clearfix;
}

/* Motion */
.shake {
  animation: shake 0.6s linear alternate;
}
@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }

  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(1%);
  }

  20%,
  40%,
  60%,
  80% {
    transform: translateX(-1%);
  }
}

/* MediaQuery */
// PC
@mixin desktop {
  @media screen and (min-width: $size_tab_max + 1) {
    @content;
  }
}

// 태블릿
@mixin tablet {
  @media screen and (max-width: $size_tab_max) {
    @content;
  }
}

// 모바일
@mixin mobile {
  @media screen and (max-width: $size_m_max) {
    @content;
  }
}

// 프린트
@mixin print {
  @media print {
  }
}

/*
THEME 사용
root div에 theme 설정
// 선언
@mixin theme-dark() {
    @at-root [theme=dark] & {
        @content;
    }
}
// 호출
@include theme-dark {
    border-color: rgb(31, 31, 31);
}
*/
