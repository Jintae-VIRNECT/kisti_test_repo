server:
  port: 8073
  ssl:
    enabled: true
    key-store: keystore.p12
    key-store-password: 1234
    key-store-type: PKCS12
    key-alias: bns-ssl

spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      routes:
        - id: auth-server
          uri: http://localhost:8321
          predicates:
            - Path=/auth/**
          filters:
            - StripPrefix=0
            - RewritePath=/auth/v2/(?<segment>.*), /v2/$\{segment}
            - name: Logging
              args:
                messagePrefix: "AUTH_SERVER"
                preLogger: true
                postLogger: true

        - id: user-server
          uri: http://localhost:8081
          #          uri: lb:http://user-server
          predicates:
            - Path=/users/**
          filters:
            - StripPrefix=0
            - RewritePath=/users/v2/(?<segment>.*), /v2/$\{segment}
            - name: Logging
              args:
                messagePrefix: "USER_SERVER"
                preLogger: true
                postLogger: true

        - id: workspace-server
          uri: lb:http://workspace-server
          predicates:
            - Path=/workspaces/**
          filters:
            - StripPrefix=0
            - RewritePath=/workspaces/v2/(?<segment>.*), /v2/$\{segment}
        #            - name: Logging
        #              args:
        #                messagePrefix: "WORKSPACE_SERVER"
        #                preLogger: true
        #                postLogger: true

        - id: remote-record-server
          uri: lb:http://remote-record-server
          predicates:
            - Path=/media/**
          filters:
            - StripPrefix=0
            - RewritePath=/media/v2/(?<segment>.+), /v2/$\{segment}/
      #            - name: Logging
      #              args:
      #                messagePrefix: "REMOTE_RECORD_SERVER_REST"
      #                preLogger: true
      #                postLogger: true


      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "*"
            allowedMethods:
              - "*"
            allowedHeaders:
              - "*"
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin Access-Control-Allow-Headers
        - MessageEncryptDecryptFilter
      x-forwarded:
        prefix-enabled: false
      httpclient:
        ssl:
          use-insecure-trust-manager: true
  zipkin:
    enabled: false
  redis:
    host: 192.168.13.14
    port: 6379
  main:
    allow-bean-definition-overriding: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://192.168.13.14:8761/eureka

jwt:
  secret: 2020-tcenriv-platform-392
logging:
  level:
    org.springframework.cloud.gateway.filter.WebsocketRoutingFilter: TRACE
