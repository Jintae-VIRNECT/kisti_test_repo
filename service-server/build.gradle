////—————————————————————————————————————————————————————————————————————————————————————————————————
//// GRADLE PLUGINS.
////—————————————————————————————————————————————————————————————————————————————————————————————————
//plugins {
//    id("org.springframework.boot")
//    id("java")
//}

//—————————————————————————————————————————————————————————————————————————————————————————————————
// CONFIGURATION.
//—————————————————————————————————————————————————————————————————————————————————————————————————
// This block encapsulates custom properties and makes them available to
// all modules in the project.
plugins {
    id("jacoco")
}

ext {
    set("springCloudVersion", "Hoxton.SR10")
    jacocoExcludes = [
        
    ]
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main {
        java.srcDir("src/main/java")
        resources.srcDir("src/main/resources")
    }
}

springBoot {
    buildInfo {
        properties {
            additional = ["version.remoteservice.server": version]
        }
    }
    mainClassName = "com.virnect.serviceserver.ServiceServerApplication"
}

//—————————————————————————————————————————————————————————————————————————————————————————————————
// DEPENDENCIES.
//—————————————————————————————————————————————————————————————————————————————————————————————————
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.data:spring-data-envers'

    // jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.2'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation 'org.springframework.security:spring-security-test'
    //============================ SERVICE DEPENDENCIES ===========================================//

    // Netflix Feign Client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-config-client'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'

    implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'

    // Query DSL
    implementation("com.querydsl:querydsl-jpa") // querydsl
    implementation("com.querydsl:querydsl-apt") // querydsl

    // Common
    implementation group: 'commons-io', name: 'commons-io', version: '2.4'

    // Apache Common Lang and Http Component
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.9'

    // aws s3
    //implementation("com.amazonaws:aws-java-sdk-s3:1.11.415") // AWS Storage Service
    implementation 'com.amazonaws:aws-java-sdk-s3' // AWS Storage Service
    // minio
    //implementation("io.minio:minio:7.1.0") // minio Storage Service
    implementation 'io.minio:minio:7.1.0'
    // feign oktthp
    implementation 'io.github.openfeign:feign-okhttp'

    //============================ MEDIA SERVER DEPENDENCIES ===========================================//
    implementation 'org.kurento:kurento-jsonrpc-server:6.14.0'
    implementation 'org.kurento:kurento-client:6.14.0'
    implementation 'com.github.docker-java:docker-java:3.1.5'
    implementation 'org.codehaus.janino:janino:3.1.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'

    //Swagger Libraries
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.19'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox-tools', version: '2.0.19'
    testImplementation group: 'org.springframework', name: 'spring-mock', version: '2.0.8'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    // image orientation
    implementation group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.9.1'

    // obj to gltf
    implementation group: 'de.javagl', name: 'obj', version: '0.3.0'
    implementation group: 'de.javagl', name: 'jgltf-model', version: '2.0.0'
    implementation group: 'de.javagl', name: 'jgltf-impl-v1', version: '2.0.0'
    implementation group: 'de.javagl', name: 'jgltf-impl-v2', version: '2.0.0'
    implementation group: 'de.javagl', name: 'jgltf-obj', version: '2.0.0'
}

//—————————————————————————————————————————————————————————————————————————————————————————————————
// GRADLE TASKS.
//—————————————————————————————————————————————————————————————————————————————————————————————————
test {
    useJUnitPlatform()
    systemProperty("spring.active.profiles", "test")
    environment("VIRNECT_ENV", "test")
    finalizedBy jacocoTestReport
}

/**
 * Jacoco Configuration
 */

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    dependsOn test

    reports {
        csv.enabled true
        xml.enabled true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExcludes)
        }))
    }

    finalizedBy jacocoTestCoverageVerification
}

bootJar {
    println(">> boot Jar task invoked")
    println("Note: sourceSet has changed with current spring profiles")

    enabled = true
    mainClassName = "com.virnect.serviceserver.ServiceServerApplication"
    manifest {
        attributes(
                "Implementation-Title": "Remote Service Server",
                "Implementation-Version": "2.0 revision 2223v6"
        )
    }
    archiveFileName.set("RM-Service-${archiveVersion.get()}.${archiveExtension.get()}")
    //destinationDirectory.set(project.file("${rootProject.buildDir}/libs/${archiveBaseName}"))
}
