# Remote Service configuration
# ----------------------
# Documentation:

# NOTE: This file doesn't need to quote assignment values, like most shells do.
# All values are stored as-is, even if they contain spaces, so don't quote them.

# Domain name. If you do not have one, the public IP of the machine.
# For example: 198.51.100.1, or remote.virnect.com
service.domain_or_public_ip=192.168.13.36

# SECRET used for apps to connect to remote server and users to access to remote Dashboard
service.remote_secret=remote

# Certificate type:
# - selfsigned:  Self signed certificate. Not recommended for production use.
#                Users will see an ERROR when connected to web page.
# - owncert:     Valid certificate purchased in a Internet services company.
#                Please put the certificates files inside folder ./owncert
#                with names certificate.key and certificate.cert
# - letsencrypt: Generate a new certificate using letsencrypt. Please set the
#                required contact email for Let's Encrypt in LETSENCRYPT_EMAIL
#                variable.
service.certificate_type=selfsigned

# If CERTIFICATE_TYPE=letsencrypt, you need to configure a valid email for notifications
service.letsencrypt_email=user@example.com

# Proxy configuration
# If you want to change the ports on which service listens, uncomment the following lines

# Allows any request to http://DOMAIN_OR_PUBLIC_IP:HTTP_PORT/ to be automatically
# redirected to https://DOMAIN_OR_PUBLIC_IP:HTTPS_PORT/.
# WARNING: the default port 80 cannot be changed during the first boot
# if you have chosen to deploy with the option CERTIFICATE_TYPE=letsencrypt
# service.http_port=80

# Changes the port of all services exposed by Remote.
# SDKs, REST clients and browsers will have to connect to this port
service.https_port=8000

# Access restrictions
# In this section you will be able to restrict the IPs from which you can access to
# Remote Service API and the Administration Panel
# WARNING! If you touch this configuration you can lose access to the platform from some IPs.
# Use it carefully.

# This section limits access to the /dashboard pages.
# The form for a single IP or an IP range is:
# ALLOWED_ACCESS_TO_DASHBOARD=198.51.100.1 and ALLOWED_ACCESS_TO_DASHBOARD=198.51.100.0/24
# To limit multiple IPs or IP ranges, separate by commas like this:
# ALLOWED_ACCESS_TO_DASHBOARD=198.51.100.1, 198.51.100.0/24
# ALLOWED_ACCESS_TO_DASHBOARD=

# This section limits access to the Remote Service REST API.
# The form for a single IP or an IP range is:
# ALLOWED_ACCESS_TO_RESTAPI=198.51.100.1 and ALLOWED_ACCESS_TO_RESTAPI=198.51.100.0/24
# To limit multiple IPs or or IP ranges, separate by commas like this:
# ALLOWED_ACCESS_TO_RESTAPI=198.51.100.1, 198.51.100.0/24
# ALLOWED_ACCESS_TO_RESTAPI=

# Service Recording
# ----------------------------------
# Whether to enable recording module or not
service.remote_recording=false

# Use recording module with debug mode.
service.remote_recording_debug=false

# Which recording module version will use/
service.remote_recording_version=2.15.0

# Remote Service Folder Record used for save the recording videos. Change it
# with the folder you want to use from your host.
service.remote_recording_path=/opt/remote/recordings

# System path where Remote Server should look for custom recording layouts
service.remote_recording_custom_layout=/opt/remote/custom-layout

# if true any client can connect to
# https://SERVER_IP:PORT/recordings/any_session_file.mp4
# and access any recorded video file. If false this path will be secured with
# SECRET param just as Remote Server dashboard at
# https://SERVER_IP:PORT
# Values: true | false
service.remote_recording_public_access=false

# Which users should receive the recording events in the client side
# (recordingStarted, recordingStopped). Can be all (every user connected to
# the session), publisher_moderator (users with role 'PUBLISHER' or
# 'MODERATOR'), moderator (only users with role 'MODERATOR') or none
# (no user will receive these events)
service.remote_recording_notification=publisher_moderator

# Timeout in seconds for recordings to automatically stop (and the session involved to be closed)
# when conditions are met: a session recording is started but no user is publishing to it or a session
# is being recorded and last user disconnects. If a user publishes within the timeout in either case,
# the automatic stop of the recording is cancelled
# 0 means no timeout
service.remote_recording_autostop_timeout=120

#
service.remote_recording_composed_url=

# Service Bandwidth
# ----------------------------------
# Maximum video bandwidth sent from clients to Remote Service Server, in kbps.
# 0 means unconstrained
service.remote_streams_video_max_recv_bandwidth=2000

# Minimum video bandwidth sent from clients to Remote Service Server, in kbps.
# 0 means unconstrained
service.remote_streams_video_min_recv_bandwidth=1000

# Maximum video bandwidth sent from Remote Service Server to clients, in kbps.
# 0 means unconstrained
service.remote_streams_video_max_send_bandwidth=2000

# Minimum video bandwidth sent from Remote Service Server to clients, in kbps.
# 0 means unconstrained
service.remote_streams_video_min_send_bandwidth=1000


# service webhook
# ----------------------------------
#"Authorization: Basic T1BFTlZJRFVBUFA6TVlfU0VDUkVU"
# true to enable Remote Service Webhook service. false' otherwise
# Values: true | false
service.remote_webhook=false

# HTTP endpoint where Remote Service Server will send Webhook HTTP POST messages
# Must be a valid URL: http(s)://ENDPOINT
service.remote_webhook_endpoint=https://webhook.site/67d3ca77-8754-428f-b814-91f45146a26a

# List of headers that Remote Service Webhook service will attach to HTTP POST messages
service.remote_webhook_headers=[]

# List of events that will be sent by Remote Service Webhook service
# Default value is all available events
service.remote_webhook_events=[sessionCreated,sessionDestroyed,participantJoined,participantLeft,webrtcConnectionCreated,webrtcConnectionDestroyed,recordingStatusChanged,filterEventDispatched,mediaNodeStatusChanged]

# Service Garbage collection
# ----------------------------------
# How often the garbage collector of non active sessions runs.
# This helps cleaning up sessions that have been initialized through
# REST API (and maybe tokens have been created for them) but have had no users connected.
# Default to 900s (15 mins). 0 to disable non active sessions garbage collector
service.remote_sessions_garbage_interval=900

# Minimum time in seconds that a non active session must have been in existence
# for the garbage collector of non active sessions to remove it. Default to 3600s (1 hour).
# If non active sessions garbage collector is disabled
# (property 'REMOTE_SESSIONS_GARBAGE_INTERVAL' to 0) this property is ignored
service.remote_sessions_garbage_threshold=3600


# Service Call Data Record logging system.
# ----------------------------------
# Call Detail Record enabled
# Whether to enable Call Detail Record or not
# Values: true | false
service.remote_cdr=false

# Path where the cdr log files are hosted
service.remote_cdr_path=/opt/remote/cdr

# Kurento Media Server image
# --------------------------
# Docker hub kurento media server: https://hub.docker.com/r/kurento/kurento-media-server-dev
# Uncomment the next line and define this variable with KMS image that you want use
# KMS_IMAGE=kurento/kurento-media-server-dev:6.14.0

# Kurento Media Server Level logs
# -------------------------------
# Uncomment the next line and define this variable to change
# the verbosity level of the logs of KMS
# Documentation: https://doc-kurento.readthedocs.io/en/stable/features/logging.html
# KMS_DEBUG_LEVEL=3,Kurento*:4,kms*:4,sdp*:4,webrtc*:4,*rtpendpoint:4,rtp*handler:4,rtpsynchronizer:4,agnosticbin:4

# Remote Service Server Level logs
# --------------------------
# Uncomment the next line and define this variable to change
# the verbosity level of the logs of Remote Service
# RECOMENDED VALUES: INFO for normal logs DEBUG for more verbose logs
# OV_CE_DEBUG_LEVEL=INFO

# Java Options
# --------------------------
# Uncomment the next line and define this to add
# options to java command
# Documentation: https://docs.oracle.com/cd/E37116_01/install.111210/e23737/configuring_jvm.htm#OUDIG00058
# JAVA_OPTIONS=-Xms2048m -Xmx4096m -Duser.timezone=UTC
